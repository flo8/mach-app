---
import PageLayout from '@PageLayout';
import Card from '@components/Card.astro';
import { getCourseDirectories } from '@utils/collections';
import { Collection, CollectionStaticProps } from '@models/courses';
import { CollectionEntry } from 'astro:content';

interface Props {
  courses: CollectionEntry<Collection>[];
  entry: CollectionEntry<Collection>;
}
export async function getStaticPaths() {
  const paramsList: CollectionStaticProps[] = [];

  try {
    const coursesDir = await getCourseDirectories('courses');
    console.log('coursesDir', coursesDir);

    Object.keys(coursesDir).forEach((key) => {
      paramsList.push({
        params: { course: key },
        props: { entry: coursesDir[key].entry, courses: coursesDir[key].courses }
      });
    });
  } catch (error) {
    console.log('ERROR', error);
  }

  return paramsList.map(({ params, props }) => {
    return { params, props };
  });
}

const { entry, courses } = Astro.props;
const { Content } = await entry.render();
---

<PageLayout {...entry.data}>
  <Content />
  {courses.map((course) => <Card href={`${course.collection}/${course.slug}`} title={course.data.title} body={course.data.description} />)}
</PageLayout>
