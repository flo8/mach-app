---
import PageLayout from '@PageLayout';
import Card from '@components/Card.astro';
import { getCourseDirectories } from '@utils/collections';
import { Collection, CollectionStaticProps } from '@models/courses';
import { CollectionEntry } from 'astro:content';
import TOC from '@components/TOC.astro';
import CoursesTable from '@components/CoursesTable/index.astro';

interface Props {
  courses: CollectionEntry<Collection>[];
  entry: CollectionEntry<Collection>;
}
export async function getStaticPaths() {
  const paramsList: CollectionStaticProps[] = [];

  try {
    const coursesDir = await getCourseDirectories('courses');

    Object.keys(coursesDir).forEach((key) => {
      paramsList.push({
        params: { course: key },
        props: { entry: coursesDir[key].entry, courses: coursesDir[key].courses }
      });
    });
  } catch (error) {
    console.log('ERROR', error);
  }

  return paramsList.map(({ params, props }) => {
    return { params, props };
  });
}

const { entry, courses } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await entry.render();

// console.log('courses', courses);
---

<PageLayout {...entry.data}>
  <TOC pageHeadings={headings} />

  <Content />

  <CoursesTable courses={courses} />

  {courses.map((course) => <Card href={`${course.collection}/${course.slug}`} course={course} />)}
</PageLayout>
