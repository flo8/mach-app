---
import ErrorMessage from '@components/ErrorMessage.vue';
import BaseLayout from './BaseLayout.astro';
import CourseProgress from '@components/CourseProgress/index.astro';
import { CourseParams, CoursesDirectoryProp } from '@models/courses';
import CoursesTable from '@components/CoursesTable/index.astro';
import CoursesTableDrawer from '@components/CoursesTable/drawer.astro';
import moment from 'moment';
import { getCourseIndex } from '@utils/collections';
const { courseDir, frontmatter, params } = Astro.props;
const collection = 'courses';
const courseIndex = await getCourseIndex(collection, `${params?.course}/readme`);

type Props = {
  frontmatter: Record<string, any>;
  courseDir: CoursesDirectoryProp;
  params: CourseParams | undefined;
};
---

<BaseLayout {...courseDir?.entry?.data}>
  {courseIndex && params?.course && <CourseProgress title={courseIndex.remarkPluginFrontmatter.title} collection={collection} params={params} courseSize={courseDir?.courses?.length || 0} />}

  <ErrorMessage client:only='vue' />
  <main class='content-page prose prose-lg lg:prose-xl bg-background-base rounded'>
    <div class='text-text-muted text-base mb-2'>
      {frontmatter?.minutesRead?.text}
      {
        frontmatter?.lastmod && (
          <time>
            <span class='text-border-input mx-2'>|</span> {moment(frontmatter.lastmod).format('LLLL')}
          </time>
        )
      }
    </div>
    {courseDir?.entry?.data?.title && <h1>{courseDir.entry.data.title}</h1>}
    {courseDir?.entry?.data?.description && <h2>{courseDir?.entry?.data.description}</h2>}
    {courseDir?.entry?.data?.preview && <img src={courseDir?.entry?.data.preview} />}
    <slot />
  </main>

  {
    Astro.params?.course && courseDir?.courses && (
      <CoursesTableDrawer>
        <CoursesTable courseId={Astro.params.course} courses={courseDir.courses} params={params} />
      </CoursesTableDrawer>
    )
  }
</BaseLayout>
